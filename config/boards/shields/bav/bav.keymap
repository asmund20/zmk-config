/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NUM 1
#define BLUETOOTH 2
#define FUNCTION 3
#define GAMING 4

&kscan1 {
    debounce-press-ms = <5>;
    debounce-release-ms = <15>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

    };

    /*
    *norwegian interpretation
    * for other languages, make your own keymap. The codes in the ZMK docs are for US layout.
    */
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   ESC   |    Q    |     W      |     E     |     R    |     T    |                |    Y    |    U   |    I    |    O    |          P     |BACKSPACE|
// |   TAB   | RALT/A  |  LShift/S  |  LCtrl/D  |  LAlt/F  |     G    |                |    H    | LAlt/J | RCtrl/K | RShft/L | RALT/Diaeresis |  ENTER  |
//           |    Z    |     X      |     C     |     V    |     B    |                |    N    |    M   |    ,    |    .    |     -          |         
//                                | FUNCTION/CAPS |  bluetooth/space  | delete |  NUM  |   NONE  |  LGUI  |
            bindings = <
&kp ESC   &kp Q      &kp W           &kp E           &kp R              &kp T                                       &kp Y     &kp U       &kp I        &kp O        &kp P          &kp BSPC
&kp TAB   &hm RALT A &hm LSHFT S     &hm LCTRL D     &hm LALT F         &kp G                                       &kp H     &hm LALT J  &hm RCTRL K  &hm RSHFT L  &hm RALT RBKT  &kp ENTER
          &kp Z      &kp X           &kp C           &kp V              &kp B                                       &kp N     &kp M       &kp COMMA    &kp PERIOD   &kp SLASH
                                                    &lt BLUETOOTH CAPS  &lt FUNCTION SPACE  &kp DELETE   &mo NUM    &none    &kp LGUI
            >;
        };

        num_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |  RALT   |    /    |     @      |     {     |     }    |    Å    |                |  |(bar) |      7       |       8       |       9       |       \      |BACKSPACE|
// |  LSHIFT |    =    |     <      |     (     |     )    |    Ø    |                |    '    |    LALT/4    |    RCtrl/5    |    RShft/6    |    RALT/+    |  ENTER  |
//           |    "    |     $      |     [     |     ]    |    Æ    |                |    0    |      1       |       2       |       3       |       -      |         
//                                              |     &    |  SPACE  |  DEL  |        | tog num |   LGUI  |
            bindings = <
&kp RALT   &kp LS(N7)  &kp RA(N2)  &kp RA(N7)  &kp RA(N0)  &kp LBKT                          &kp GRAVE  &kp N7        &kp N8         &kp N9         &kp EQUAL        &trans
&kp LSHFT  &kp LS(N0)  &kp NUBS    &kp LS(N8)  &kp LS(N9)  &kp SEMI                          &kp BSLH   &hm LALT N4   &hm RCTRL N5   &hm RSHFT N6   &hm RALT MINUS   &kp ENTER
           &kp LS(N2)  &kp RA(N4)  &kp RA(N8)  &kp RA(N9)  &kp SQT                           &kp N0     &kp N1        &kp N2         &kp N3         &trans
                                               &kp LS(N6)  &trans       &trans     &trans    &trans     &trans
            >;
        };

        bt_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |  NONE  |  NONE  |  LSHIFT |  CTRL  |    LAlt    |  NONE  |                 |  NONE  |  NONE  |  vol up  |  NONE  |  NONE  |  NONE  |
// |  NONE  |  bt 0  |   bt 1  |  bt 2  |    bt 3    |  bt 4  |                 |  NONE  |  NONE  |  vol dn  |  NONE  |  NONE  |  NONE  |
//          |  NONE  | out usb | out bt |  bt clear  |  NONE  |                 |  NONE  |  NONE  |  NONE    |  NONE  |  NONE  |
//                                      |    NONE    |  NONE  |  NONE  |        |  NONE  |  NONE  |
            bindings = <
&none  &none         &none         &none         &none         &none                            &none    &kp C_BRI_UP  &kp C_VOL_UP    &none    &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &none    &kp C_BRI_DN  &kp C_VOL_DN    &none    &none  &none
       &none         &out OUT_USB  &out OUT_BLE  &bt BT_CLR    &none                            &none    &none         &kp C_MUTE      &none    &none
                                                 &none         &none        &trans     &none    &none    &none
            >;
        };

        fn_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   F1   |   F2   |   F3   |   F4   |   F5   |   F6   |                      |   INS  |  pgup  |   up   |  pgdn  |  NONE  |  NONE  |
// |   F7   |   F8   |   F9   |   F10  |   F11  |   F12  |                      |  HOME  |  left  |  down  |  right |  lalt  |  ENTER |
//          |  LALT  |  LSHIFT|  CTRL  |  LALT  |  NONE  |                      |   END  |  NONE  |  NONE  |  NONE  |  NONE  |
//                                     |  NONE  |  NONE  |  NONE  |  to GAMING  |  NONE  |  LGUI  |
            bindings = <
&kp F1  &kp F2    &kp F3     &kp F4     &kp F5    &kp F6                        &kp INS   &kp PG_UP  &kp UP    &kp PG_DN  &none  &none
&kp F7  &kp F8    &kp F9     &kp F10    &kp F11   &kp F12                       &kp HOME  &kp LEFT   &kp DOWN  &kp RIGHT  &kp LALT  &kp ENTER
        &kp LALT  &kp LSHFT  &kp LCTRL  &kp LALT  &none                         &kp END   &none      &none     &none      &none
                                        &trans    &none  &none    &to GAMING    &none     &trans
            >;
        };

        gaming_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   ESC   |    Q    |     W      |     E     |     R    |     T    |              
// |   TAB   | RALT/A  |  LShift/S  |  LCtrl/D  |  LAlt/F  |     G    |              
//           |    Z    |     X      |     C     |     V    |     B    |              
//                                | FUNCTION/CAPS |  bluetooth/space  | delete |  to default  
            bindings = <
&kp ESC    &kp Q      &kp W    &kp E   &kp R    &kp T                                   &kp Y     &kp U       &kp I        &kp O        &kp P          &kp BSPC
&kp LSHFT  &kp A      &kp S    &kp D   &kp F    &kp G                                   &kp H     &hm LALT J  &hm RCTRL K  &hm RSHFT L  &hm RALT RBKT  &kp ENTER
           &kp Z      &kp X    &kp C   &kp V    &kp B                                   &kp N     &kp M       &kp COMMA    &kp PERIOD   &kp SLASH
                                       &kp F3   &kp SPACE  &kp DELETE     &to DEFAULT   &kp T    &to DEFAULT
            >;
        };
    };
};
